package protect.rentalcalc;

import android.graphics.pdf.PdfDocument;
import android.util.Log;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.StringReader;
import java.util.Date;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.html.simpleparser.HTMLWorker;

class PdfExporter
{
    private static final String TAG = "RentalCalc";

    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16, Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);

    private final Property _property;

    public PdfExporter(Property property)
    {
        _property = property;
    }

    boolean exportPdf(File outputFile)
    {
        Document document = new Document();

        try {
            PdfWriter pdfWriter = PdfWriter.getInstance(document,
                    new FileOutputStream(outputFile));

            document.open();

            addMetaData(document);
            addTitlePage(document);

            // EXAMPLES:
            // http://www.vogella.com/tutorials/JavaPDF/article.html
            // http://tutorials.jenkov.com/java-itext/font.html
            // http://stackoverflow.com/questions/10493837/how-to-export-html-page-to-pdf-format

            /*
            HTMLWorker htmlWorker = new HTMLWorker( document );

            String HTML = "<html>\n" +
                    "<header><title>This is title</title></header>\n" +
                    "<body>\n" +
                    "Hello world\n" +
                    "</body>\n" +
                    "</html>";

            htmlWorker.parse(new StringReader(HTML));
*/


            document.newPage();

            document.add(new Paragraph("A Hello World PDF document."));

            document.newPage();

            document.add(new Paragraph("Page 2, paragraph 1"));
            document.add(new Paragraph("Page 2, paragraph 2"));
            document.add(new Paragraph("Page 2, paragraph 3"));

            document.newPage();

            document.add(new Paragraph("Page 3, paragraph 1"));
            document.add(new Paragraph("Page 3, paragraph 2"));
            document.add(new Paragraph("Page 3, paragraph 3"));


            document.close(); // no need to close PDFwriter?

            pdfWriter.close();

        } catch (DocumentException | IOException e) {
            Log.e(TAG, "Failed to generate PDF report", e);
            return false;
        }

        return true;
    }

    private void addMetaData(Document document)
    {
        document.addAuthor("Rental Calc");
        document.addSubject("Rental report for " + _property.nickname);
        document.addCreationDate();
        document.addTitle("Rental report for " + _property.nickname);
    }

    private void addTitlePage(Document document) throws DocumentException
    {
        Paragraph preface = new Paragraph();
        // We add one empty line
        addEmptyLines(preface, 1);
        // Lets write a big header
        preface.add(new Paragraph("Title of the document", catFont));

        addEmptyLines(preface, 1);
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph(
                "Report generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                smallBold));
        addEmptyLines(preface, 3);
        preface.add(new Paragraph(
                "This document describes something which is very important ",
                smallBold));

        addEmptyLines(preface, 8);

        preface.add(new Paragraph(
                "This document is a preliminary version and not subject to your license agreement or any other agreement with vogella.com ;-).",
                redFont));

        document.add(preface);
        // Start a new page
        document.newPage();
    }

    private void addEmptyLines(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++)
        {
            paragraph.add(new Paragraph(" "));
        }
    }
}
